bits 64 
section .text
global start

start:
; adds the return address to the stack
sub rsp, 8
mov dword [rsp], 0xCCCCCCCC
mov dword [rsp+4], 0xCCCCCCCC
; saves all gpr's to the stack
push rax
push rbx
push rcx
push rdx
push rdi
push rsi
push rsp
push rbp
push r8
push r9
push r10
push r11
push r12
push r13
push r14
push r15
; saves all flags to the stack
pushfq
; moves the function address to rax
mov qword rax, 0xBBBBBBBBBBBBBBBB
; moves the argument to rcx (__fastcall/__thiscall only)
mov qword rcx, 0xCCCCCCCCCCCCCCCC
; creates some stack space for the function
sub qword rsp, 0x10
; calls the defined function
call qword rax
; restores the function stack space
add qword rsp, 0x10
; restores all flags from the stack
popfq
; restores all gpr'sfrom the stack
pop r15
pop r14
pop r13
pop r12
pop r11
pop r10
pop r9
pop r8
pop rbp
pop rsp
pop rsi
pop rdi
pop rdx
pop rcx
pop rbx
pop rax
; returns to normal execution
ret